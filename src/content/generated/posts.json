[{"id":2,"title":"Welcome Page","author":"Esmaeil MIRZAEE","date":"Sep 01, 2020","readtime":null,"image":null,"point":null,"content":"\n# Welcome to my blog posts\n"},{"id":1,"title":"How to install _Rust_ on _fish_","author":"Esmaeil MIRZAEE","date":"Sep 9, 2020","readtime":"2","image":"19.png","point":"Fish is an interactive shell environment. Installation of tools or programming languages on it is somehow tricky due to its way of working.","content":"\n> In this post, I explain the process of running the **lovely programming language** `Rust` on `Fish`.\n\n# Introduction\n\n## What is Fish?\n\nFish or **friendly interactive shell** is another `Unix shell` environment that attempts to be more interactive and and user-friendly than those with a long history.\n\n## What is Rust?\n\n`Rust` a blazingly fast programming language. It is a system programming language and statically typed which is supported by community and Mozilla. `Rust` is memory safe and not object oriented. It's more like [`ML`, `F#` and `OCamel`](https://newrustacean.com/show_notes/e000/index.html).\n\n# How to install Rust?\n\n## `Rust` installation\n\nSimply put, run\n\n```Bash\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```\n\n> if you use `bash`, `zsh` or anything like these just open a new terminal or just run\n\n```bash\nsource $HOME/.cargo/env\n```\n\n## Setting up `Fish`\n\nThe above command won't work on `Fish`. So, please run the following command\n\n```bash\nset -xU fish_user_paths $HOME/.cargo/bin $fish_user_paths\n```\n\n# Conclusion\n\nThat's it. The installation of `Rust` is as blazingly as running your program.\n\n# Resouce\n\n1. [Rust](https://www.rust-lang.org/)\n1. [Rust installer](https://rustup.rs/)\n1. [Fish](https://fishshell.com/)\n"},{"id":3,"title":"How to create a YouTube channel","author":"Esmaeil MIRZAEE","date":"Sep 29, 2020","readtime":"9","image":"19.png","point":"Start your teaching in YouTube.","content":"\n# How to create a YouTube channel\n\nIn this tutorial, we will be developing a Spring Boot application that makes use of JWT authentication for securing an exposed REST API. In this example, we will be making use of hard-coded user values for user authentication. In the next tutorial, we will be implementing Spring Boot + JWT + MYSQL JPA for storing and fetching user credentials. Any user will be able to consume this API only if it has a valid JSON Web Token (JWT). In a previous tutorial, we learned what is JWT and when and how to use it.\n\nThis tutorial is explained in the following video:\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Spzug_SjJnM\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n_Follow the steps in order to create a **Google** account_\n\n1. Open your browser\n2. Close your browser\n\n### Connecting to your YouTube account\n"}]